[{"C:\\Users\\HP\\Desktop\\Firebase-Logic-Calculator\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\Firebase-Logic-Calculator\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\Firebase-Logic-Calculator\\src\\firebaseConfig.js":"3","C:\\Users\\HP\\Desktop\\Firebase-Logic-Calculator\\src\\reportWebVitals.js":"4"},{"size":600,"mtime":1684441801207,"results":"5","hashOfConfig":"6"},{"size":13133,"mtime":1684445238535,"results":"7","hashOfConfig":"6"},{"size":735,"mtime":1684441801187,"results":"8","hashOfConfig":"6"},{"size":375,"mtime":1684441801210,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"ad7v8a",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Desktop\\Firebase-Logic-Calculator\\src\\index.js",["25"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport firebaseConfig from './firebaseConfig';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","C:\\Users\\HP\\Desktop\\Firebase-Logic-Calculator\\src\\App.js",["26","27","28","29","30","31","32","33"],[],"import { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, set, push, onValue, remove, update} from \"firebase/database\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n  let [add,setAdd] = useState(\"\")\r\n  let [sub,setSub] = useState(\"\")\r\n  let [mul,setMul] = useState(\"\")\r\n  let [div,setDiv] = useState(\"\")\r\n  let [error,setError] = useState(\"\")\r\n  let [uerror,setuerror] = useState(\"\")\r\n  let [prev,setPrev] = useState(0)\r\n  let [textArr,setTextArr] = useState([])\r\n  let [editbtn,setEditBtn] = useState(false)\r\n  let [ulv,setUlv] = useState(\"\")\r\n  let [upv,setUpv] = useState(\"\")\r\n  let [uTask,setUTask] = useState(\"\")\r\n  let [uid,setUid] = useState(\"\")\r\n  const db = getDatabase();\r\n  \r\n\r\n\r\n\r\n  let handleAdd = (e) =>{\r\n    setAdd(e.target.value)\r\n  }\r\n  let handleSub= (e) =>{\r\n    setSub(e.target.value)\r\n  }\r\n  let handleMul= (e) =>{\r\n    setMul(e.target.value)\r\n  }\r\n  let handleDel= (e) =>{\r\n    setDiv(e.target.value)\r\n  }\r\n  \r\n  let handleSubmit = ()=>{\r\n\r\n    let array =[ ]\r\n    array.push({\r\n      add:add,\r\n      sub:sub,\r\n      mul:mul,\r\n      div:div\r\n    })\r\n    setError(\"\")\r\n\r\n    array.map((item)=>{\r\n\r\n      if(item.add && !item.sub*1 && !item.mul*1 && !item.div*1){\r\n        let check = /^\\S+$/.test(item.add)\r\n        console.log(check)\r\n        if(item.add*1 || item.add*1 === 0){\r\n          let value = item.add*1 + prev*1\r\n          setPrev(value)\r\n          setError(\"\")\r\n          set(push(ref(db, 'logic/')), {\r\n            latestValue : item.add*1,\r\n            preValue : prev*1,\r\n            task: \"+\",\r\n            results : value\r\n          }).then(()=>{\r\n            console.log(\"Data Gese\")\r\n          })\r\n          \r\n\r\n\r\n        }else{\r\n          setError(\"Please Enter a valid Number\")\r\n          setAdd(\"\")\r\n        }\r\n\r\n        if(!check){\r\n          setError(\"Space not allow!\")\r\n        }\r\n        setAdd(\"\")\r\n      }\r\n      else if(!item.add*1 && item.sub && !item.mul*1 && !item.div*1){\r\n        let check = /^\\S+$/.test(item.sub)\r\n        if(item.sub*1 || item.sub*1 === 0 ){\r\n          let subvalue = prev*1 - item.sub*1\r\n          setPrev(subvalue)\r\n          setError(\"\")\r\n          \r\n          set(push(ref(db, 'logic/')), {\r\n            latestValue : item.sub*1,\r\n            preValue : prev*1,\r\n            task: \"-\",\r\n            results:subvalue,\r\n          }).then(()=>{\r\n            console.log(\"Data Gese\")\r\n          })\r\n\r\n\r\n        }else{\r\n          setError(\"Please Enter a valid Number\")\r\n          setSub(\"\")\r\n        }\r\n\r\n        if(!check){\r\n          setError(\"Space not allow!\")\r\n        }\r\n        setSub(\"\")\r\n      }\r\n      \r\n      else if(!item.add*1 && !item.sub*1 && item.mul && !item.div*1){\r\n        let check = /^\\S+$/.test(item.mul)\r\n        if(item.mul*1 || item.mul*1 === 0){\r\n          let mulvalue = prev * item.mul*1\r\n          setPrev(mulvalue)\r\n          setError(\"\")\r\n          set(push(ref(db, 'logic/')), {\r\n            latestValue : item.mul*1,\r\n            preValue : prev*1,\r\n            task: \"*\",\r\n            results:mulvalue,\r\n          }).then(()=>{\r\n            console.log(\"Data Gese\")\r\n          })\r\n\r\n        }else{\r\n          setError(\"Please Enter a valid Number\")\r\n          setMul(\"\")\r\n        }\r\n\r\n        if(!check){\r\n          setError(\"Space not allow!\")\r\n        }\r\n        setMul(\"\")\r\n      }\r\n      \r\n      else if(item.div && !item.add*1 && !item.sub*1 && !item.mul*1){\r\n        let check = /^\\S+$/.test(item.div)\r\n        if(item.div*1 || item.div*1 === 0){\r\n            let value = item.div*1\r\n            if(!value){\r\n              setError(\"Can't Divided by 0\")\r\n            }else{\r\n              let subvalue = prev / item.div*1\r\n              setPrev(subvalue)\r\n              setError(\"\")\r\n              set(push(ref(db, 'logic/')), {\r\n                latestValue : item.div*1,\r\n                preValue : prev*1,\r\n                task: \"/\",\r\n                results : subvalue\r\n              }).then(()=>{\r\n                console.log(\"Data Gese\")\r\n              })\r\n\r\n            }\r\n            setDiv(\"\")\r\n        }else{\r\n          setError(\"Please Enter a valid Number\")\r\n          setDiv(\"\")\r\n        }\r\n\r\n        if(!check){\r\n          setError(\"Space not allow!\")\r\n        }\r\n      }else{\r\n        setError(\"PLease enter a single input\")\r\n      }\r\n    })\r\n\r\n    setUlv(\"\")\r\n    setUpv(\"\")\r\n    setEditBtn(false)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const todoref = ref(db, 'logic/');\r\n    \r\n    \r\n    onValue(todoref, (snapshot) => {\r\n      let arr = []\r\n      snapshot.forEach((item)=>{\r\n        arr.push({...item.val(),id:item.key})\r\n      })\r\n      setTextArr(arr)\r\n    });\r\n  },[])\r\n\r\n\r\n  let handleDelete = (id) =>{\r\n    remove(ref(db, 'logic/'+id))\r\n\r\n    setUlv(\"\")\r\n    setUpv(\"\")\r\n    setEditBtn(false)\r\n  }\r\n\r\n  let handleEdit = (lvalue,pvalue,task,id)=>{\r\n    setEditBtn(true)\r\n    setUlv(lvalue)\r\n    setUpv(pvalue)\r\n    setUid(id)\r\n    setUTask(task)\r\n    setAdd(\"\")\r\n    setSub(\"\")\r\n    setDiv(\"\")\r\n    setMul(\"\")\r\n\r\n  }\r\n\r\n\r\n\r\n  let handleChange =()=>{\r\n    console.log(setEditBtn(false))\r\n  }\r\n  let handleLatestValue = (e)=>{\r\n    setUpv(e.target.value)\r\n  }\r\n  let handlePreValue = (e)=>{\r\n    setUlv(e.target.value)\r\n  }\r\n  let handleUpdate =()=>{\r\n    update(ref(db, 'logic/'+uid),{\r\n      latestValue : ulv,\r\n      preValue : upv,\r\n    })\r\n    setAdd(\"\")\r\n    setSub(\"\")\r\n    setDiv(\"\")\r\n    setMul(\"\")\r\n    setError(\"\")\r\n    if(uTask == \"+\"){\r\n      let check1 = /^\\S+$/.test(ulv)\r\n      let check2 = /^\\S+$/.test(upv)\r\n      let check3 = /\"^\\\\d+$\"/.test(ulv)\r\n      let check4 = /\"^\\\\d+$\"/.test(upv)\r\n      console.log(check3)\r\n      if(check1 && check2){\r\n        update(ref(db, 'logic/'+uid),{\r\n          latestValue : ulv,\r\n          preValue : upv,\r\n          results : ulv*1 + upv*1\r\n        })\r\n  \r\n        setPrev(upv*1 + ulv*1)\r\n        setEditBtn(false)\r\n        setuerror(\"\")\r\n      }else{\r\n        setuerror(\"Enter a valid Number\")\r\n      }\r\n\r\n      \r\n    }\r\n    if(uTask == \"-\"){\r\n      let check1 = /^\\S+$/.test(ulv)\r\n      let check2 = /^\\S+$/.test(upv)\r\n      if(check1 && check2){\r\n        update(ref(db, 'logic/'+uid),{\r\n          latestValue : ulv,\r\n          preValue : upv,\r\n          results : upv*1 - ulv*1,\r\n          \r\n        })\r\n        setPrev(upv*1 - ulv*1)\r\n        setEditBtn(false)\r\n        setuerror(\"\")\r\n      }else{\r\n        setuerror(\"Enter a valid Number\")\r\n      }\r\n\r\n    }\r\n    if(uTask == \"*\"){\r\n      let check1 = /^\\S+$/.test(ulv)\r\n      let check2 = /^\\S+$/.test(upv)\r\n      if(check1 && check2){\r\n        update(ref(db, 'logic/'+uid),{\r\n          latestValue : ulv,\r\n          preValue : upv,\r\n          results : upv*1 * ulv*1,\r\n  \r\n        })\r\n  \r\n        setPrev((upv*1) *( ulv*1))\r\n        setEditBtn(false)\r\n        setuerror(\"\")\r\n      }else{\r\n        setuerror(\"Enter a valid Number\")\r\n      }\r\n\r\n    }\r\n    if(uTask == \"/\" ){\r\n      \r\n      let check1 = /^\\S+$/.test(ulv)\r\n      let check2 = /^\\S+$/.test(upv)\r\n      if(check1 && check2){\r\n        if(ulv*1 != 0){\r\n          update(ref(db, 'logic/'+uid),{\r\n            latestValue : ulv,\r\n            preValue : upv,\r\n            results : upv*1 / ulv*1,\r\n          })\r\n          setPrev(upv*1 / ulv*1)\r\n          setEditBtn(false)\r\n          setuerror(\"\")\r\n        }else{\r\n          setuerror(\"Can't divide by 0\")\r\n        }\r\n\r\n      }else{\r\n        setuerror(\"Enter a valid Number\")\r\n      }\r\n\r\n    }\r\n\r\n    \r\n\r\n  }\r\n  return (\r\n    <>\r\n      <div className='rounded-[20px] w-[1300px] pt-[40px] pb-[50px] mt-9 mb-9 mx-auto font-mono bg-[#ffeee6] flex justify-between'>\r\n\r\n\r\n        <div className='w-[67%]'>\r\n        <div>\r\n          <h1 className='text-[#26337c] text-center font-extrabold text-[40px]'>Arithmatic Logic Field</h1>\r\n        </div>\r\n          <div className='flex justify-between mt-[40px] w-full'>\r\n\r\n            <div className='w-[40%] py-[25px] px-[25px] bg-green-300 rounded-[10px]'>\r\n              <div>\r\n                <h3 className='font-bold text-[26px] text-gray-800 text-center'>Addition</h3>\r\n              </div>\r\n              <input value={add} onChange={handleAdd} className='block w-full mt-[15px] rounded-[10px] py-[15px] text-[20px] px-[20px]'/>\r\n            </div>\r\n\r\n            <div className='w-[40%] py-[25px] px-[25px] bg-[#13ebce] rounded-[10px]'>\r\n              <div>\r\n                <h3 className='font-bold text-[26px] text-center text-gray-800'>Subtraction</h3>\r\n              </div>\r\n              <input value={sub} onChange={handleSub} className='block w-full mt-[15px] rounded-[10px] text-[20px] py-[15px] px-[20px]'/>\r\n            </div>\r\n            \r\n          </div>\r\n          <div className='flex justify-center w-full mt-[40px]'>\r\n            <div className='w-[35%]  py-[50px]  bg-[#ffcd82] rounded-[10px]'>\r\n              <h2 className='text-center text-[24px] font-medium text-gray-900'>{prev}</h2>\r\n              <h4 className='text-center mt-2 text-[16px] font-normal text-red-600'>{error}</h4>\r\n            </div>\r\n          </div>\r\n          <div className='flex justify-between mt-[40px] w-full'>\r\n\r\n            <div className='w-[40%] py-[25px] px-[25px] bg-[#a3c4f0] rounded-[10px]'>\r\n              <div>\r\n                <h3 className='font-bold text-[26px] text-gray-800 text-center'>Multiplication</h3>\r\n              </div>\r\n              <input value={mul} onChange={handleMul} className='block w-full mt-[15px] rounded-[10px] py-[15px] text-[20px] px-[20px]'/>\r\n            </div>\r\n            <div className='flex items-center justify-center'>\r\n              <button onClick={handleSubmit} className='font-normal text-gray-800 text-[20px] hover:text-white h-[48px] w-[140px] bg-red-200 rounded-[10px] duration-200 hover:bg-green-500'>Submit</button>\r\n            </div>\r\n\r\n            <div className='w-[40%] py-[25px] px-[25px] bg-[#f8a9eb] rounded-[10px]'>\r\n              <div>\r\n                <h3 className='font-bold text-[26px] text-center text-gray-800'>Dividation</h3>\r\n              </div>\r\n              <input value={div} onChange={handleDel} className='block w-full mt-[15px] rounded-[10px] py-[15px] text-[20px] px-[20px]'/>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n        <div className='w-[32%]'>\r\n          <div className=' mb-[40px]'>\r\n            <h1 className='text-[#26337c] text-center font-extrabold text-[40px]'>History</h1>\r\n          </div>\r\n\r\n          <div className=' bg-[#e9e9e9] rounded-[5px] '>\r\n            {\r\n              editbtn && <div className='my-4 w-full rounded-[10px]'>\r\n                <div className='w-full flex justify-between'>\r\n                  <input type='number' onChange={handleLatestValue} value={upv} placeholder='Previous Value' className='w-[48%] px-[10px] py-[7px] inline-block  placeholder:text-[12px] rounded-[5px]'/>\r\n                  <input type='number' onChange={handlePreValue} value={ulv} placeholder='Latest Value' className='w-[48%] px-[10px] py-[7px] inline-block placeholder:text-[12px] rounded-[5px]'/>\r\n                </div>\r\n                <button className='mt-[10px] px-[15px] py-[6px] ml-2 font-normal text-gray-800 text-[12px] hover:text-white bg-blue-300 rounded-[10px] duration-200 hover:bg-green-500' onClick={handleUpdate}>Update</button>\r\n                <button className='mt-[10px] px-[15px] py-[6px] ml-2 font-normal text-gray-800 text-[12px] hover:text-white bg-blue-300 rounded-[10px] duration-200 hover:bg-green-500' onClick={handleChange}>Cancel</button>\r\n\r\n                <div>\r\n                  <h4>{uerror}</h4>\r\n                </div>\r\n                \r\n                </div>\r\n            }\r\n            <ol className='overflow-scroll h-[552px]'>\r\n            {\r\n              textArr.map((item,index)=>(\r\n                index%2===0 ? <li className='bg-[#ffd050] px-[15px] rounded-[5px]  py-[6px] mb-1' key={index}>{index+1}. {item.preValue} { item.task } {item.latestValue} = {item.results} <button className='ml-2 font-normal text-gray-800 text-[12px] hover:text-white h-[24px] w-[60px] bg-orange-400 rounded-[10px] duration-200 hover:bg-green-500' onClick={()=>handleEdit(item.latestValue, item.preValue, item.task,item.id)}>Edit</button><button onClick={()=>handleDelete(item.id)} className=' ml-2 font-normal text-gray-800 text-[12px] hover:text-white h-[24px] w-[60px] bg-red-400 rounded-[10px] duration-200 hover:bg-green-500'>Delete</button></li> \r\n                : \r\n                <li className='bg-[#ffefc1] rounded-[5px]   px-[15px] py-[6px] mb-1' key={index}>{index+1}. {item.preValue} { item.task } {item.latestValue} = {item.results}  <button className='font-normal ml-2 text-gray-800 text-[12px] hover:text-white h-[24px] w-[60px] bg-orange-400  rounded-[10px] duration-200 hover:bg-green-500'  onClick={()=>handleEdit(item.latestValue, item.preValue, item.task,item.id)}>Edit</button><button onClick={()=>handleDelete(item.id)} className=' ml-2 font-normal text-gray-800 text-[12px] hover:text-white h-[24px] w-[60px] bg-red-400 rounded-[10px] duration-200 hover:bg-green-500'>Delete</button></li>\r\n              ))\r\n            }\r\n            </ol>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\HP\\Desktop\\Firebase-Logic-Calculator\\src\\firebaseConfig.js",["34"],[],"// Import the functions you need from the SDKs you need\r\n\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n\r\n// Your web app's Firebase configuration\r\n\r\nconst firebaseConfig = {\r\n\r\n  apiKey: \"AIzaSyABH6RP3BWsUybuAIdKJWg3s5jcs-8ouGs\",\r\n\r\n  authDomain: \"logic-calculator-a1c75.firebaseapp.com\",\r\n\r\n  projectId: \"logic-calculator-a1c75\",\r\n\r\n  storageBucket: \"logic-calculator-a1c75.appspot.com\",\r\n\r\n  messagingSenderId: \"265910283184\",\r\n\r\n  appId: \"1:265910283184:web:2507d97bd16eb662d00475\"\r\n\r\n};\r\n\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport default firebaseConfig","C:\\Users\\HP\\Desktop\\Firebase-Logic-Calculator\\src\\reportWebVitals.js",[],[],{"ruleId":"35","severity":1,"message":"36","line":5,"column":8,"nodeType":"37","messageId":"38","endLine":5,"endColumn":22},{"ruleId":"39","severity":1,"message":"40","line":51,"column":21,"nodeType":"41","messageId":"42","endLine":51,"endColumn":23},{"ruleId":"43","severity":1,"message":"44","line":186,"column":5,"nodeType":"45","endLine":186,"endColumn":7,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":231,"column":14,"nodeType":"49","messageId":"50","endLine":231,"endColumn":16},{"ruleId":"35","severity":1,"message":"51","line":235,"column":11,"nodeType":"37","messageId":"38","endLine":235,"endColumn":17},{"ruleId":"47","severity":1,"message":"48","line":253,"column":14,"nodeType":"49","messageId":"50","endLine":253,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":271,"column":14,"nodeType":"49","messageId":"50","endLine":271,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":290,"column":14,"nodeType":"49","messageId":"50","endLine":290,"endColumn":16},{"ruleId":"47","severity":1,"message":"52","line":295,"column":18,"nodeType":"49","messageId":"50","endLine":295,"endColumn":20},{"ruleId":"35","severity":1,"message":"53","line":31,"column":7,"nodeType":"37","messageId":"38","endLine":31,"endColumn":10},"no-unused-vars","'firebaseConfig' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.","ArrayExpression",["54"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'check4' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'app' is assigned a value but never used.",{"desc":"55","fix":"56"},"Update the dependencies array to be: [db]",{"range":"57","text":"58"},[4616,4618],"[db]"]